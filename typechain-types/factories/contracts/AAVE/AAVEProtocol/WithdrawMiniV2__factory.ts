/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  WithdrawMiniV2,
  WithdrawMiniV2Interface,
} from "../../../../contracts/AAVE/AAVEProtocol/WithdrawMiniV2";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "interestRateMode",
        type: "uint256",
      },
    ],
    name: "RepayDebt",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "AAVE_REFERRAL_CODE",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_market",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getUserDebt",
    outputs: [
      {
        internalType: "uint256",
        name: "stableDebt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "variableDebt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "recoverERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_market",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_interestRateMode",
        type: "uint256",
      },
    ],
    name: "repayDebt",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_market",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "withdrawERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610e7c806100606000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806305a363de14610067578063258170081461008557806336c8218b146100a157806337b872cf146100d25780638980f11f146100ee5780638da5cb5b1461010a575b600080fd5b61006f610128565b60405161007c919061080d565b60405180910390f35b61009f600480360381019061009a91906108c1565b61012d565b005b6100bb60048036038101906100b69190610928565b610325565b6040516100c992919061098a565b60405180910390f35b6100ec60048036038101906100e791906109b3565b6103e1565b005b61010860048036038101906101039190610a1a565b61056d565b005b6101126106dc565b60405161011f9190610a69565b60405180910390f35b604081565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b290610ae1565b60405180910390fd5b60006101c685610700565b90508373ffffffffffffffffffffffffffffffffffffffff1663095ea7b382856040518363ffffffff1660e01b8152600401610203929190610b01565b6020604051808303816000875af1158015610222573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102469190610b62565b5060008173ffffffffffffffffffffffffffffffffffffffff1663573ade81868686306040518563ffffffff1660e01b81526004016102889493929190610b8f565b6020604051808303816000875af11580156102a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102cb9190610be9565b90508473ffffffffffffffffffffffffffffffffffffffff167f9ba25c7034b6ce546184222311386e26a078a33b4a1d22fd90ad758233045e92828560405161031592919061098a565b60405180910390a2505050505050565b600080600061033386610778565b90508073ffffffffffffffffffffffffffffffffffffffff166328dd2d0186866040518363ffffffff1660e01b8152600401610370929190610c16565b61012060405180830381865afa15801561038e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b29190610c7c565b909192939495969750909192939450909192935090919250909150905050809350819450505050935093915050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461046f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046690610ae1565b60405180910390fd5b600061047a85610700565b905060008173ffffffffffffffffffffffffffffffffffffffff166369328dec8686866040518463ffffffff1660e01b81526004016104bb93929190610d46565b6020604051808303816000875af11580156104da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104fe9190610be9565b90508273ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb8360405161055d9190610d7d565b60405180910390a3505050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f290610ae1565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b8152600401610656929190610b01565b6020604051808303816000875af1158015610675573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106999190610b62565b6106d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106cf90610de4565b60405180910390fd5b5050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008173ffffffffffffffffffffffffffffffffffffffff1663026b1d5f6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561074d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107719190610e19565b9050919050565b60008173ffffffffffffffffffffffffffffffffffffffff1663e860accb6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e99190610e19565b9050919050565b600061ffff82169050919050565b610807816107f0565b82525050565b600060208201905061082260008301846107fe565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108588261082d565b9050919050565b6108688161084d565b811461087357600080fd5b50565b6000813590506108858161085f565b92915050565b6000819050919050565b61089e8161088b565b81146108a957600080fd5b50565b6000813590506108bb81610895565b92915050565b600080600080608085870312156108db576108da610828565b5b60006108e987828801610876565b94505060206108fa87828801610876565b935050604061090b878288016108ac565b925050606061091c878288016108ac565b91505092959194509250565b60008060006060848603121561094157610940610828565b5b600061094f86828701610876565b935050602061096086828701610876565b925050604061097186828701610876565b9150509250925092565b6109848161088b565b82525050565b600060408201905061099f600083018561097b565b6109ac602083018461097b565b9392505050565b600080600080608085870312156109cd576109cc610828565b5b60006109db87828801610876565b94505060206109ec87828801610876565b93505060406109fd878288016108ac565b9250506060610a0e87828801610876565b91505092959194509250565b60008060408385031215610a3157610a30610828565b5b6000610a3f85828601610876565b9250506020610a50858286016108ac565b9150509250929050565b610a638161084d565b82525050565b6000602082019050610a7e6000830184610a5a565b92915050565b600082825260208201905092915050565b7f4e6f7420617574686f72697a6564000000000000000000000000000000000000600082015250565b6000610acb600e83610a84565b9150610ad682610a95565b602082019050919050565b60006020820190508181036000830152610afa81610abe565b9050919050565b6000604082019050610b166000830185610a5a565b610b23602083018461097b565b9392505050565b60008115159050919050565b610b3f81610b2a565b8114610b4a57600080fd5b50565b600081519050610b5c81610b36565b92915050565b600060208284031215610b7857610b77610828565b5b6000610b8684828501610b4d565b91505092915050565b6000608082019050610ba46000830187610a5a565b610bb1602083018661097b565b610bbe604083018561097b565b610bcb6060830184610a5a565b95945050505050565b600081519050610be381610895565b92915050565b600060208284031215610bff57610bfe610828565b5b6000610c0d84828501610bd4565b91505092915050565b6000604082019050610c2b6000830185610a5a565b610c386020830184610a5a565b9392505050565b600064ffffffffff82169050919050565b610c5981610c3f565b8114610c6457600080fd5b50565b600081519050610c7681610c50565b92915050565b60008060008060008060008060006101208a8c031215610c9f57610c9e610828565b5b6000610cad8c828d01610bd4565b9950506020610cbe8c828d01610bd4565b9850506040610ccf8c828d01610bd4565b9750506060610ce08c828d01610bd4565b9650506080610cf18c828d01610bd4565b95505060a0610d028c828d01610bd4565b94505060c0610d138c828d01610bd4565b93505060e0610d248c828d01610c67565b925050610100610d368c828d01610b4d565b9150509295985092959850929598565b6000606082019050610d5b6000830186610a5a565b610d68602083018561097b565b610d756040830184610a5a565b949350505050565b6000602082019050610d92600083018461097b565b92915050565b7f5472616e73666572206661696c65640000000000000000000000000000000000600082015250565b6000610dce600f83610a84565b9150610dd982610d98565b602082019050919050565b60006020820190508181036000830152610dfd81610dc1565b9050919050565b600081519050610e138161085f565b92915050565b600060208284031215610e2f57610e2e610828565b5b6000610e3d84828501610e04565b9150509291505056fea26469706673582212208a2e8cbd5267bbda84129dda79e7c25f708d8095d20296ce22ac520d13eb4ae764736f6c63430008180033";

type WithdrawMiniV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WithdrawMiniV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WithdrawMiniV2__factory extends ContractFactory {
  constructor(...args: WithdrawMiniV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      WithdrawMiniV2 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): WithdrawMiniV2__factory {
    return super.connect(runner) as WithdrawMiniV2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WithdrawMiniV2Interface {
    return new Interface(_abi) as WithdrawMiniV2Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): WithdrawMiniV2 {
    return new Contract(address, _abi, runner) as unknown as WithdrawMiniV2;
  }
}
