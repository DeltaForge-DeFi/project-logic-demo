/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  DSProxyCache,
  DSProxyCacheInterface,
} from "../../../../../contracts/DSProxy/proxy/DSProxy.sol/DSProxyCache";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_code",
        type: "bytes",
      },
    ],
    name: "read",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_code",
        type: "bytes",
      },
    ],
    name: "write",
    outputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610399806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80637ed0c3b21461003b5780638bf4515c1461006b575b600080fd5b610055600480360381019061005091906102be565b61009b565b6040516100629190610348565b60405180910390f35b610085600480360381019061008091906102be565b61011c565b6040516100929190610348565b60405180910390f35b60008151602083016000f09050803b15600181036100b857600080fd5b506000828051906020012090508160008083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050919050565b6000808280519060200120905060008082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915050919050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6101cb82610182565b810181811067ffffffffffffffff821117156101ea576101e9610193565b5b80604052505050565b60006101fd610164565b905061020982826101c2565b919050565b600067ffffffffffffffff82111561022957610228610193565b5b61023282610182565b9050602081019050919050565b82818337600083830152505050565b600061026161025c8461020e565b6101f3565b90508281526020810184848401111561027d5761027c61017d565b5b61028884828561023f565b509392505050565b600082601f8301126102a5576102a4610178565b5b81356102b584826020860161024e565b91505092915050565b6000602082840312156102d4576102d361016e565b5b600082013567ffffffffffffffff8111156102f2576102f1610173565b5b6102fe84828501610290565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061033282610307565b9050919050565b61034281610327565b82525050565b600060208201905061035d6000830184610339565b9291505056fea2646970667358221220da0660d274b1098aa88e2e7253a3a37495ce17649b97ad849e840e5118a08f8564736f6c63430008180033";

type DSProxyCacheConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DSProxyCacheConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DSProxyCache__factory extends ContractFactory {
  constructor(...args: DSProxyCacheConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      DSProxyCache & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DSProxyCache__factory {
    return super.connect(runner) as DSProxyCache__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DSProxyCacheInterface {
    return new Interface(_abi) as DSProxyCacheInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): DSProxyCache {
    return new Contract(address, _abi, runner) as unknown as DSProxyCache;
  }
}
