/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  ActionBase,
  ActionBaseInterface,
} from "../../../../contracts/permissions/action/ActionBase";

const _abi = [
  {
    inputs: [],
    name: "NonContractCall",
    type: "error",
  },
  {
    inputs: [],
    name: "ReturnIndexValueError",
    type: "error",
  },
  {
    inputs: [],
    name: "SenderNotAdmin",
    type: "error",
  },
  {
    inputs: [],
    name: "SenderNotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "SubIndexValueError",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "logName",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "ActionEvent",
    type: "event",
  },
  {
    inputs: [],
    name: "NO_PARAM_MAPPING",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RETURN_MAX_INDEX_VALUE",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RETURN_MIN_INDEX_VALUE",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SUB_MAX_INDEX_VALUE",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SUB_MIN_INDEX_VALUE",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "actionType",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "adminData",
    outputs: [
      {
        internalType: "contract AdminData",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_callData",
        type: "bytes",
      },
      {
        internalType: "bytes32[]",
        name: "_subData",
        type: "bytes32[]",
      },
      {
        internalType: "uint8[]",
        name: "_paramMapping",
        type: "uint8[]",
      },
      {
        internalType: "bytes32[]",
        name: "_returnValues",
        type: "bytes32[]",
      },
    ],
    name: "executeAction",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_callData",
        type: "bytes",
      },
    ],
    name: "executeActionDirect",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_proxy",
        type: "address",
      },
    ],
    name: "isDSProxy",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "kill",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "logger",
    outputs: [
      {
        internalType: "contract DefisaverLogger",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "contract DFSRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdrawStuckFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class ActionBase__factory {
  static readonly abi = _abi;
  static createInterface(): ActionBaseInterface {
    return new Interface(_abi) as ActionBaseInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ActionBase {
    return new Contract(address, _abi, runner) as unknown as ActionBase;
  }
}
