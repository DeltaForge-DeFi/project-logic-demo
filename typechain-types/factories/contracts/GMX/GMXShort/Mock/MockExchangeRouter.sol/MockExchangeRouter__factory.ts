/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../../common";
import type {
  MockExchangeRouter,
  MockExchangeRouterInterface,
} from "../../../../../../contracts/GMX/GMXShort/Mock/MockExchangeRouter.sol/MockExchangeRouter";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "receiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "cancellationReceiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "callbackContract",
                type: "address",
              },
              {
                internalType: "address",
                name: "uiFeeReceiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "market",
                type: "address",
              },
              {
                internalType: "address",
                name: "initialCollateralToken",
                type: "address",
              },
              {
                internalType: "address[]",
                name: "swapPath",
                type: "address[]",
              },
            ],
            internalType: "struct CreateOrderParamsAddresses",
            name: "addresses",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "sizeDeltaUsd",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "initialCollateralDeltaAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "triggerPrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "acceptablePrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "executionFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callbackGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minOutputAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "validFromTime",
                type: "uint256",
              },
            ],
            internalType: "struct CreateOrderParamsNumbers",
            name: "numbers",
            type: "tuple",
          },
          {
            internalType: "enum OrderType",
            name: "orderType",
            type: "uint8",
          },
          {
            internalType: "enum DecreasePositionSwapType",
            name: "decreasePositionSwapType",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "isLong",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "shouldUnwrapNativeToken",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "autoCancel",
            type: "bool",
          },
          {
            internalType: "bytes32",
            name: "referralCode",
            type: "bytes32",
          },
        ],
        internalType: "struct OrderParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "createOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "createShortAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "multicall",
    outputs: [
      {
        internalType: "bytes[]",
        name: "results",
        type: "bytes[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "sendTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "sendWnt",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_createShortAddress",
        type: "address",
      },
    ],
    name: "setCreateShortAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610c73806100206000396000f3fe6080604052600436106100555760003560e01c80632ab595ac1461005a5780636996807b146100835780637d39aaf1146100ac578063ac9650d8146100c8578063e203947c146100f8578063e6d66ac814610123575b600080fd5b34801561006657600080fd5b50610081600480360381019061007c9190610568565b61014c565b005b34801561008f57600080fd5b506100aa60048036038101906100a591906105ba565b61018f565b005b6100c660048036038101906100c19190610639565b6102d1565b005b6100e260048036038101906100dd91906106de565b610318565b6040516100ef919061087d565b60405180910390f35b34801561010457600080fd5b5061010d610415565b60405161011a91906108ae565b60405180910390f35b34801561012f57600080fd5b5061014a600480360381019061014591906108c9565b610439565b005b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000816020016020013511156102ce5760008180600001906101b1919061092b565b60a00160208101906101c39190610568565b73ffffffffffffffffffffffffffffffffffffffff166323b872dd60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684806000019061020f919061092b565b60000160208101906102219190610568565b85602001602001356040518463ffffffff1660e01b815260040161024793929190610962565b6020604051808303816000875af1158015610266573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028a91906109d1565b9050806102cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102c390610a5b565b60405180910390fd5b505b50565b80341115610314576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030b90610ac7565b60405180910390fd5b5050565b60608282905067ffffffffffffffff81111561033757610336610ae7565b5b60405190808252806020026020018201604052801561036a57816020015b60608152602001906001900390816103555790505b50905060005b8383905081101561040e5783838281811061038e5761038d610b16565b5b90506020028101906103a09190610b45565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508282815181106103f6576103f5610b16565b5b60200260200101819052508080600101915050610370565b5092915050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000811161047c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047390610bf4565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b81526004016104b7929190610c14565b6020604051808303816000875af11580156104d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104fa91906109d1565b50505050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105358261050a565b9050919050565b6105458161052a565b811461055057600080fd5b50565b6000813590506105628161053c565b92915050565b60006020828403121561057e5761057d610500565b5b600061058c84828501610553565b91505092915050565b600080fd5b60006101e082840312156105b1576105b0610595565b5b81905092915050565b6000602082840312156105d0576105cf610500565b5b600082013567ffffffffffffffff8111156105ee576105ed610505565b5b6105fa8482850161059a565b91505092915050565b6000819050919050565b61061681610603565b811461062157600080fd5b50565b6000813590506106338161060d565b92915050565b600080604083850312156106505761064f610500565b5b600061065e85828601610553565b925050602061066f85828601610624565b9150509250929050565b600080fd5b600080fd5b600080fd5b60008083601f84011261069e5761069d610679565b5b8235905067ffffffffffffffff8111156106bb576106ba61067e565b5b6020830191508360208202830111156106d7576106d6610683565b5b9250929050565b600080602083850312156106f5576106f4610500565b5b600083013567ffffffffffffffff81111561071357610712610505565b5b61071f85828601610688565b92509250509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610791578082015181840152602081019050610776565b60008484015250505050565b6000601f19601f8301169050919050565b60006107b982610757565b6107c38185610762565b93506107d3818560208601610773565b6107dc8161079d565b840191505092915050565b60006107f383836107ae565b905092915050565b6000602082019050919050565b60006108138261072b565b61081d8185610736565b93508360208202850161082f85610747565b8060005b8581101561086b578484038952815161084c85826107e7565b9450610857836107fb565b925060208a01995050600181019050610833565b50829750879550505050505092915050565b600060208201905081810360008301526108978184610808565b905092915050565b6108a88161052a565b82525050565b60006020820190506108c3600083018461089f565b92915050565b6000806000606084860312156108e2576108e1610500565b5b60006108f086828701610553565b935050602061090186828701610553565b925050604061091286828701610624565b9150509250925092565b600080fd5b600080fd5b600080fd5b60008235600160e0038336030381126109475761094661091c565b5b80830191505092915050565b61095c81610603565b82525050565b6000606082019050610977600083018661089f565b610984602083018561089f565b6109916040830184610953565b949350505050565b60008115159050919050565b6109ae81610999565b81146109b957600080fd5b50565b6000815190506109cb816109a5565b92915050565b6000602082840312156109e7576109e6610500565b5b60006109f5848285016109bc565b91505092915050565b600082825260208201905092915050565b7f526f757465723a207472616e73666572206661696c6564000000000000000000600082015250565b6000610a456017836109fe565b9150610a5082610a0f565b602082019050919050565b60006020820190508181036000830152610a7481610a38565b9050919050565b7f496e73756666696369656e7420574e5420616d6f756e74000000000000000000600082015250565b6000610ab16017836109fe565b9150610abc82610a7b565b602082019050919050565b60006020820190508181036000830152610ae081610aa4565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008083356001602003843603038112610b6257610b6161091c565b5b80840192508235915067ffffffffffffffff821115610b8457610b83610921565b5b602083019250600182023603831315610ba057610b9f610926565b5b509250929050565b7f73656e64546f6b656e73206d757374206265206d6f7265207468616e20300000600082015250565b6000610bde601e836109fe565b9150610be982610ba8565b602082019050919050565b60006020820190508181036000830152610c0d81610bd1565b9050919050565b6000604082019050610c29600083018561089f565b610c366020830184610953565b939250505056fea264697066735822122091d5cefa135a43bae8131250b5904e5578fe6c29d63069260bef909166558abc64736f6c63430008180033";

type MockExchangeRouterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockExchangeRouterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockExchangeRouter__factory extends ContractFactory {
  constructor(...args: MockExchangeRouterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MockExchangeRouter & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockExchangeRouter__factory {
    return super.connect(runner) as MockExchangeRouter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockExchangeRouterInterface {
    return new Interface(_abi) as MockExchangeRouterInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MockExchangeRouter {
    return new Contract(address, _abi, runner) as unknown as MockExchangeRouter;
  }
}
