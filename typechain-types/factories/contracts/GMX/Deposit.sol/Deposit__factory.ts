/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  Deposit,
  DepositInterface,
} from "../../../../contracts/GMX/Deposit.sol/Deposit";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_depositVault",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "DepositMade",
    type: "event",
  },
  {
    inputs: [],
    name: "depositVault",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "makeDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161095e38038061095e8339818101604052810190610032919061011d565b81600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505061015d565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100ea826100bf565b9050919050565b6100fa816100df565b811461010557600080fd5b50565b600081519050610117816100f1565b92915050565b60008060408385031215610134576101336100ba565b5b600061014285828601610108565b925050602061015385828601610108565b9150509250929050565b6107f28061016c6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063059a500c14610046578063d7cd394914610062578063fc0c546a14610080575b600080fd5b610060600480360381019061005b9190610433565b61009e565b005b61006a6103ae565b60405161007791906104a1565b60405180910390f35b6100886103d2565b604051610095919061051b565b60405180910390f35b80600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016100fa91906104a1565b602060405180830381865afa158015610117573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061013b919061054b565b101561017c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610173906105d5565b60405180910390fd5b80600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b81526004016101da9291906105f5565b602060405180830381865afa1580156101f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021b919061054b565b101561025c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102539061066a565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3360008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040518463ffffffff1660e01b81526004016102db93929190610699565b6020604051808303816000875af11580156102fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031e9190610708565b61035d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035490610781565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167fd15c9547ea5c06670c0010ce19bc32d54682a4b3801ece7f3ab0c3f17106b4bb826040516103a391906107a1565b60405180910390a250565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080fd5b6000819050919050565b610410816103fd565b811461041b57600080fd5b50565b60008135905061042d81610407565b92915050565b600060208284031215610449576104486103f8565b5b60006104578482850161041e565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061048b82610460565b9050919050565b61049b81610480565b82525050565b60006020820190506104b66000830184610492565b92915050565b6000819050919050565b60006104e16104dc6104d784610460565b6104bc565b610460565b9050919050565b60006104f3826104c6565b9050919050565b6000610505826104e8565b9050919050565b610515816104fa565b82525050565b6000602082019050610530600083018461050c565b92915050565b60008151905061054581610407565b92915050565b600060208284031215610561576105606103f8565b5b600061056f84828501610536565b91505092915050565b600082825260208201905092915050565b7f496e73756666696369656e7420746f6b656e2062616c616e6365000000000000600082015250565b60006105bf601a83610578565b91506105ca82610589565b602082019050919050565b600060208201905081810360008301526105ee816105b2565b9050919050565b600060408201905061060a6000830185610492565b6106176020830184610492565b9392505050565b7f416c6c6f77616e6365206e6f7420736574000000000000000000000000000000600082015250565b6000610654601183610578565b915061065f8261061e565b602082019050919050565b6000602082019050818103600083015261068381610647565b9050919050565b610693816103fd565b82525050565b60006060820190506106ae6000830186610492565b6106bb6020830185610492565b6106c8604083018461068a565b949350505050565b60008115159050919050565b6106e5816106d0565b81146106f057600080fd5b50565b600081519050610702816106dc565b92915050565b60006020828403121561071e5761071d6103f8565b5b600061072c848285016106f3565b91505092915050565b7f546f6b656e207472616e73666572206661696c65640000000000000000000000600082015250565b600061076b601583610578565b915061077682610735565b602082019050919050565b6000602082019050818103600083015261079a8161075e565b9050919050565b60006020820190506107b6600083018461068a565b9291505056fea26469706673582212208a188af80092198d10dbe19e385ceb39ba1ecb0bc9a34dfd768189ddbd09038a64736f6c63430008180033";

type DepositConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DepositConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Deposit__factory extends ContractFactory {
  constructor(...args: DepositConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _tokenAddress: AddressLike,
    _depositVault: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _tokenAddress,
      _depositVault,
      overrides || {}
    );
  }
  override deploy(
    _tokenAddress: AddressLike,
    _depositVault: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _tokenAddress,
      _depositVault,
      overrides || {}
    ) as Promise<
      Deposit & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Deposit__factory {
    return super.connect(runner) as Deposit__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DepositInterface {
    return new Interface(_abi) as DepositInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Deposit {
    return new Contract(address, _abi, runner) as unknown as Deposit;
  }
}
