/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  CheckWalletType,
  CheckWalletTypeInterface,
} from "../../../../contracts/common/utils/CheckWalletType";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_proxy",
        type: "address",
      },
    ],
    name: "isDSProxy",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610276806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80631c451ceb14610030575b600080fd5b61004a6004803603810190610045919061015a565b610060565b60405161005791906101a2565b60405180910390f35b6000735a15566417e6c1c9546523066500bddbc53f88c773ffffffffffffffffffffffffffffffffffffffff166329710388836040518263ffffffff1660e01b81526004016100af91906101cc565b602060405180830381865afa1580156100cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100f09190610213565b9050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610127826100fc565b9050919050565b6101378161011c565b811461014257600080fd5b50565b6000813590506101548161012e565b92915050565b6000602082840312156101705761016f6100f7565b5b600061017e84828501610145565b91505092915050565b60008115159050919050565b61019c81610187565b82525050565b60006020820190506101b76000830184610193565b92915050565b6101c68161011c565b82525050565b60006020820190506101e160008301846101bd565b92915050565b6101f081610187565b81146101fb57600080fd5b50565b60008151905061020d816101e7565b92915050565b600060208284031215610229576102286100f7565b5b6000610237848285016101fe565b9150509291505056fea264697066735822122015a9545005f989593fc24ff01c6bda98ace4826558129af9e3250acdec8902eb64736f6c63430008180033";

type CheckWalletTypeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CheckWalletTypeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CheckWalletType__factory extends ContractFactory {
  constructor(...args: CheckWalletTypeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      CheckWalletType & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): CheckWalletType__factory {
    return super.connect(runner) as CheckWalletType__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CheckWalletTypeInterface {
    return new Interface(_abi) as CheckWalletTypeInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): CheckWalletType {
    return new Contract(address, _abi, runner) as unknown as CheckWalletType;
  }
}
