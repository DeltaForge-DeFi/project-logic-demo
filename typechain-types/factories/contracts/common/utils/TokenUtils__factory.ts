/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  TokenUtils,
  TokenUtilsInterface,
} from "../../../../contracts/common/utils/TokenUtils";

const _abi = [
  {
    inputs: [],
    name: "ETH_ADDR",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WETH_ADDR",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x610132610053600b82828239805160001a607314610046577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe7300000000000000000000000000000000000000003014608060405260043610603d5760003560e01c80637753f47b14604257806382dfc5f714605c575b600080fd5b60486076565b6040516053919060e3565b60405180910390f35b6062608e565b604051606d919060e3565b60405180910390f35b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81565b73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc281565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600060cf8260a6565b9050919050565b60dd8160c6565b82525050565b600060208201905060f6600083018460d6565b9291505056fea264697066735822122001d298d564eb5dc5384af712c6bff50ccfeca8ffadfa2ec71eebee3391bb16fa64736f6c63430008180033";

type TokenUtilsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenUtilsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenUtils__factory extends ContractFactory {
  constructor(...args: TokenUtilsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TokenUtils & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TokenUtils__factory {
    return super.connect(runner) as TokenUtils__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenUtilsInterface {
    return new Interface(_abi) as TokenUtilsInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): TokenUtils {
    return new Contract(address, _abi, runner) as unknown as TokenUtils;
  }
}
